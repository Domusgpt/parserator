{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Parserator Schema",
	"scopeName": "source.parserator-schema",
	"patterns": [
		{
			"include": "#parserator-schema"
		}
	],
	"repository": {
		"parserator-schema": {
			"patterns": [
				{
					"include": "#comments"
				},
				{
					"include": "#schema-object"
				},
				{
					"include": "#json-base"
				}
			]
		},
		"schema-object": {
			"patterns": [
				{
					"name": "meta.schema.parserator",
					"begin": "\\{",
					"end": "\\}",
					"patterns": [
						{
							"include": "#schema-properties"
						},
						{
							"include": "#json-base"
						}
					]
				}
			]
		},
		"schema-properties": {
			"patterns": [
				{
					"name": "meta.property.name.parserator",
					"match": "\"(name)\"\\s*:",
					"captures": {
						"1": {
							"name": "support.property.name.parserator"
						}
					}
				},
				{
					"name": "meta.property.description.parserator",
					"match": "\"(description)\"\\s*:",
					"captures": {
						"1": {
							"name": "support.property.description.parserator"
						}
					}
				},
				{
					"name": "meta.property.schema.parserator",
					"match": "\"(schema)\"\\s*:",
					"captures": {
						"1": {
							"name": "support.property.schema.parserator"
						}
					}
				},
				{
					"name": "meta.property.instructions.parserator",
					"match": "\"(instructions)\"\\s*:",
					"captures": {
						"1": {
							"name": "support.property.instructions.parserator"
						}
					}
				},
				{
					"include": "#field-types"
				}
			]
		},
		"field-types": {
			"patterns": [
				{
					"name": "string.quoted.double.parserator-type",
					"match": "\"(string|number|boolean|email|phone|date|datetime|currency|url|string_array)\"",
					"captures": {
						"1": {
							"name": "support.type.parserator"
						}
					}
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.parserator",
					"match": "//.*$"
				},
				{
					"name": "comment.block.parserator",
					"begin": "/\\*",
					"end": "\\*/"
				}
			]
		},
		"json-base": {
			"patterns": [
				{
					"include": "#string"
				},
				{
					"include": "#number"
				},
				{
					"include": "#boolean"
				},
				{
					"include": "#null"
				},
				{
					"include": "#array"
				},
				{
					"include": "#object"
				}
			]
		},
		"string": {
			"name": "string.quoted.double.json",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.json",
					"match": "\\\\."
				}
			]
		},
		"number": {
			"name": "constant.numeric.json",
			"match": "-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?"
		},
		"boolean": {
			"name": "constant.language.json",
			"match": "\\b(true|false)\\b"
		},
		"null": {
			"name": "constant.language.null.json",
			"match": "\\bnull\\b"
		},
		"array": {
			"name": "meta.structure.array.json",
			"begin": "\\[",
			"end": "\\]",
			"patterns": [
				{
					"include": "#json-base"
				}
			]
		},
		"object": {
			"name": "meta.structure.dictionary.json",
			"begin": "\\{",
			"end": "\\}",
			"patterns": [
				{
					"include": "#json-base"
				}
			]
		}
	}
}