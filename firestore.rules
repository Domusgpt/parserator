rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can read/write their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // API Keys - users can read/write their own keys
    match /api_keys/{keyId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Usage tracking - users can read their own usage
    match /usage/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if false; // Only server can write usage
    }
    
    // Daily usage records
    match /usage/{userId}/daily/{date} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if false; // Only server can write usage
    }
    
    // Stripe customers - users can read their own customer data
    match /customers/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if false; // Only Stripe extension can write
    }
    
    // Stripe subscriptions
    match /customers/{userId}/subscriptions/{subscriptionId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if false; // Only Stripe extension can write
    }
    
    // Stripe checkout sessions
    match /customers/{userId}/checkout_sessions/{sessionId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Products and prices (public read-only)
    match /products/{id} {
      allow read: if true;
      allow write: if false; // Only admins can write
    }
    
    match /products/{id}/prices/{priceId} {
      allow read: if true;
      allow write: if false; // Only admins can write
    }
    
    // Admin-only collections
    match /admin/{document=**} {
      allow read, write: if request.auth != null && 
        request.auth.token.admin == true;
    }
  }
}